# Actions
def A(): pass
def C(): pass
def B(): pass

# States
states = {
0:{'name': 'OFF', 'outputs': {'OUT': 0}, 'delay': 0},
1:{'name': '1', 'outputs': {'OUT': 0}, 'delay': 0},
2:{'name': 'OffA', 'outputs': {'OUT': 0}, 'delay': 0},
3:{'name': 'ON', 'outputs': {'OUT': 1}, 'delay': 0},
4:{'name': '4', 'outputs': {'OUT': 0}, 'delay': 0},
5:{'name': '5', 'outputs': {'OUT': 0}, 'delay': 0},
6:{'name': '6', 'outputs': {'OUT': 0}, 'delay': 0},
7:{'name': '7', 'outputs': {'OUT': 0}, 'delay': 0},
}

initial = 0
accepting = []
unsafe = []
frontier = []
finished = []
graytransitions = (
)
failedtransitions = (
)
passtransitions = (
)
runstarts = [0]

# State Transitions
graph = (
(0, [('B', (1.0,))], 0.4, 1, {}),
(1, [('B', (0.0,))], 0.6, 0, {}),
(1, [('A', (1.0,))], 4.0, 2, {}),
(2, [('A', (0.0,))], 1.0, 1, {}),
(2, [('B', (0.0,))], 0.6, 3, {}),
(3, [('A', (0.0,))], 1.0, 0, {}),
(3, [('B', (1.0,))], 0.4, 2, {}),
(3, [('C', (0.0,))], 0.4, 4, {}),
(4, [('A', (0.0,))], 1.0, 5, {}),
(5, [('B', (1.0,))], 0, 6, {}),
(6, [('C', (1.0,))], 0, 1, {}),
(6, [('B', (0.0,))], 0, 5, {}),
(6, [('A', (1.0,))], 4.0, 7, {}),
(7, [('A', (0.0,))], 1.0, 6, {}),
(7, [('C', (1.0,))], 0, 2, {}),
(7, [('B', (0.0,))], 0, 4, {}),
(5, [('C', (1.0,))], 0.6, 0, {}),
(5, [('A', (1.0,))], 4.0, 4, {}),
(4, [('B', (1.0,))], 0, 7, {}),
(4, [('C', (1.0,))], 0.6, 3, {}),
(2, [('C', (0.0,))], 0, 7, {}),
(1, [('C', (0.0,))], 0, 6, {}),
(0, [('A', (1.0,))], 4.0, 3, {}),
(0, [('C', (0.0,))], 0.4, 5, {}),
)